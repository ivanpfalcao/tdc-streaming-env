---
apiVersion: v1
kind: Service
metadata:
  name: tiny-cluster-zk
spec:
  clusterIP: None
  ports:
    - name: zk-client-port
      port: 2181
    - name: zk-fwr-port
      port: 2888
    - name: zk-elec-port
      port: 3888
  selector:
    zk_cluster: tiny-cluster-zk
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    zk_cluster: tiny-cluster-zk
  name: tiny-cluster-zk
spec:
  replicas: 1
  selector:
    matchLabels:
      zk_cluster: tiny-cluster-zk
  serviceName: tiny-cluster-zk
  template:
    metadata:
      labels:
        zk_cluster: tiny-cluster-zk
    spec:
      containers:
        - env:
            - name: ZOO_SERVERS
              value: server.1=tiny-cluster-zk-0.tiny-cluster-zk:2888:3888;2181
            - name: SERVER_JVMFLAGS
              value: -Xms1024m -Xmx1800m
            - name: ZOO_MAX_CLIENT_CNXNS
              value: "1000"
          image: zookeeper:3.7.0
          name: tiny-cluster-zk
          command:
          - /bin/sh
          args:
          - -c
          - ZOO_MY_ID=$(( $(echo `hostname -s` | sed 's/[^0-9]//g') + 1 )) /docker-entrypoint.sh zkServer.sh start-foreground
          ports:
            - containerPort: 2181
              name: zk-client-port
            - containerPort: 2888
              name: zk-fwr-port
            - containerPort: 3888
              name: zk-elec-port
          resources:
            limits:
              cpu: 2
              memory: 2Gi
            requests:
              cpu: 1
              memory: 512Mi
          volumeMounts:
            - mountPath: /data
              name: druid-test-zk-data
            - mountPath: /datalog
              name: druid-test-zk-data-log
  volumeClaimTemplates:
    - metadata:
        name: druid-test-zk-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 5Gi
    - metadata:
        name: druid-test-zk-data-log
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 5Gi